"""
Setup Madrasha test data with Islamic classes and subjects
"""
from app import create_app
from models import db, User, Batch, UserRole
from datetime import date
from decimal import Decimal

app = create_app()

with app.app_context():
    try:
        # Check if we already have batches
        existing_batch = Batch.query.first()
        if existing_batch:
            print('‚úÖ Test data already exists!')
            print(f'   Found batch: {existing_batch.name}')
        else:
            # Create Madrasha classes
            batches = [
                {
                    'name': '‡¶¨‡ßá‡¶¨‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏',
                    'description': '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶ì ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶¨‡¶∞‡ßç‡¶£‡¶Æ‡¶æ‡¶≤‡¶æ, ‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ ‡¶ì ‡¶∏‡ßÅ‡¶∞‡¶æ',
                    'fee_amount': Decimal('500.00'),
                    'start_date': date(2025, 1, 1)
                },
                {
                    'name': '‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ',
                    'description': '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶®‡¶æ‡¶Ø‡ßá‡¶∞‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ, ‡¶ó‡¶£‡¶ø‡¶§, ‡¶Ü‡¶ï‡¶æ‡¶á‡¶¶ ‡¶ì ‡¶´‡¶ø‡¶ï‡¶π',
                    'fee_amount': Decimal('800.00'),
                    'start_date': date(2025, 1, 1)
                },
                {
                    'name': '‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡¶Ø‡¶º ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ',
                    'description': '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶®‡¶æ‡¶Ø‡ßá‡¶∞‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ, ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø, ‡¶ó‡¶£‡¶ø‡¶§, ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£',
                    'fee_amount': Decimal('900.00'),
                    'start_date': date(2025, 1, 1)
                },
                {
                    'name': '‡¶§‡ßÉ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ',
                    'description': '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶æ‡¶ú‡¶¨‡ßÄ‡¶¶‡¶∏‡¶π, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ, ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø, ‡¶ó‡¶£‡¶ø‡¶§, ‡¶π‡¶æ‡¶¶‡ßÄ‡¶∏ ‡¶ì ‡¶´‡¶ø‡¶ï‡¶π',
                    'fee_amount': Decimal('1000.00'),
                    'start_date': date(2025, 1, 1)
                },
                {
                    'name': '‡¶ö‡¶§‡ßÅ‡¶∞‡ßç‡¶• ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ',
                    'description': '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶π‡¶ø‡¶´‡¶ú ‡¶∂‡ßÅ‡¶∞‡ßÅ, ‡¶∏‡¶ï‡¶≤ ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º, ‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø, ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏',
                    'fee_amount': Decimal('1200.00'),
                    'start_date': date(2025, 1, 1)
                },
                {
                    'name': '‡¶™‡¶û‡ßç‡¶ö‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ',
                    'description': '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶π‡¶ø‡¶´‡¶ú, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ, ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø, ‡¶ó‡¶£‡¶ø‡¶§, ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®, ‡¶π‡¶æ‡¶¶‡ßÄ‡¶∏ ‡¶ì ‡¶∏‡ßÄ‡¶∞‡¶æ‡¶π',
                    'fee_amount': Decimal('1500.00'),
                    'start_date': date(2025, 1, 1)
                }
            ]
            
            for batch_data in batches:
                batch = Batch(
                    name=batch_data['name'],
                    description=batch_data['description'],
                    fee_amount=batch_data['fee_amount'],
                    start_date=batch_data['start_date'],
                    is_active=True
                )
                db.session.add(batch)
            
            db.session.commit()
            print('‚úÖ Madrasha classes (batches) created successfully!')
            
            # Get student and enroll in a class
            student = User.query.filter_by(phoneNumber='01912345678').first()
            if student:
                batch = Batch.query.filter_by(name='‡¶§‡ßÉ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ').first()
                if batch:
                    student.batches.append(batch)
                    db.session.commit()
                    print(f'‚úÖ Sample student enrolled in {batch.name}')
        
        # Print summary
        print('\nüìä Current Madrasha Database Summary:')
        print(f'   Total Users: {User.query.count()}')
        print(f'   - Students: {User.query.filter_by(role=UserRole.STUDENT).count()}')
        print(f'   - Ustadh/Teachers: {User.query.filter_by(role=UserRole.TEACHER).count()}')
        print(f'   - Admins: {User.query.filter_by(role=UserRole.SUPER_USER).count()}')
        print(f'   Total Classes (Batches): {Batch.query.count()}')
        
        print('\nüìö Classes:')
        for batch in Batch.query.all():
            print(f'   - {batch.name}: ‡ß≥{batch.fee_amount}/‡¶Æ‡¶æ‡¶∏')
        
    except Exception as e:
        print(f'‚ùå Error setting up test data: {e}')
        import traceback
        traceback.print_exc()
